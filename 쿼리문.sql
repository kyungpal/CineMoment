DROP TABLE EVENT_DETAIL_IMAGE;
DROP TABLE EVENTBOARD;
DROP TABLE MOVIE_DETAIL_IMAGE;
DROP TABLE MOVIE_DETAILS;
DROP TABLE MOVIE_MEMBER;
DROP TABLE MOVIE_ORDER;
DROP TABLE MOVIE_SEAT;
DROP TABLE MOVIE_SEAT1;
DROP TABLE MOVIE_SEAT2;
DROP TABLE NOTICEBOARD;
DROP TABLE ONELINEREVIEW;
DROP TABLE REVIEW_DETAIL_IMAGE;
DROP TABLE REVIEWBOARD;



CREATE TABLE "EVENT_DETAIL_IMAGE" 
   (	"IMAGE_ID" NUMBER(20,0), 
	"BOARDNO" NUMBER(20,0), 
	"FILENAME" VARCHAR2(50 BYTE), 
	"FILETYPE" VARCHAR2(40 BYTE), 
	"CREDATE" DATE DEFAULT SYSDATE
   );

Insert into EVENT_DETAIL_IMAGE (IMAGE_ID,BOARDNO,FILENAME,FILETYPE,CREDATE) values (1,1,'event1.jpg','detail_image',to_date('25/03/07','RR/MM/DD'));
Insert into EVENT_DETAIL_IMAGE (IMAGE_ID,BOARDNO,FILENAME,FILETYPE,CREDATE) values (2,2,'event2.jpg','detail_image',to_date('25/03/07','RR/MM/DD'));
Insert into EVENT_DETAIL_IMAGE (IMAGE_ID,BOARDNO,FILENAME,FILETYPE,CREDATE) values (3,3,'event3.jpg','detail_image',to_date('25/03/07','RR/MM/DD'));

CREATE TABLE "EVENTBOARD" 
   (	"BOARDNO" NUMBER, 
	"BOARDTITLE" VARCHAR2(200 BYTE), 
	"BOARDWRITEDATE" DATE DEFAULT sysdate
   );

Insert into EVENTBOARD (BOARDNO,BOARDTITLE,BOARDWRITEDATE) values (1,'영화 <승부> 굿즈패키지 런칭',to_date('25/03/07','RR/MM/DD'));
Insert into EVENTBOARD (BOARDNO,BOARDTITLE,BOARDWRITEDATE) values (2,'<위플래쉬> "IM UPSET!" 스페셜 상영회',to_date('25/03/07','RR/MM/DD'));
Insert into EVENTBOARD (BOARDNO,BOARDTITLE,BOARDWRITEDATE) values (3,'<고독한 미식가 더 무비> 3주차 현장증정 이벤트',to_date('25/03/07','RR/MM/DD'));

  CREATE UNIQUE INDEX "SYS_C007760" ON "EVENTBOARD" ("BOARDNO");
  ALTER TABLE "EVENTBOARD" MODIFY ("BOARDTITLE" NOT NULL ENABLE);
  ALTER TABLE "EVENTBOARD" ADD PRIMARY KEY ("BOARDNO") ENABLE;


CREATE TABLE "MOVIE_DETAIL_IMAGE" 
   (	"IMAGE_ID" NUMBER(20,0), 
	"MOVIE_ID" NUMBER(20,0), 
	"FILENAME" VARCHAR2(50 BYTE), 
	"FILETYPE" VARCHAR2(40 BYTE), 
	"CREDATE" DATE DEFAULT SYSDATE
   );

Insert into MOVIE_DETAIL_IMAGE (IMAGE_ID,MOVIE_ID,FILENAME,FILETYPE,CREDATE) values (1,1,'89000.jpg','detail_image',to_date('25/03/26','RR/MM/DD'));
Insert into MOVIE_DETAIL_IMAGE (IMAGE_ID,MOVIE_ID,FILENAME,FILETYPE,CREDATE) values (2,2,'89519_1000.jpg','detail_image',to_date('25/03/26','RR/MM/DD'));
Insert into MOVIE_DETAIL_IMAGE (IMAGE_ID,MOVIE_ID,FILENAME,FILETYPE,CREDATE) values (3,3,'89484_1000.jpg','detail_image',to_date('25/03/26','RR/MM/DD'));
Insert into MOVIE_DETAIL_IMAGE (IMAGE_ID,MOVIE_ID,FILENAME,FILETYPE,CREDATE) values (4,4,'89450_1000.jpg','detail_image',to_date('25/03/26','RR/MM/DD'));
Insert into MOVIE_DETAIL_IMAGE (IMAGE_ID,MOVIE_ID,FILENAME,FILETYPE,CREDATE) values (5,5,'89058_1000.jpg','detail_image',to_date('25/03/26','RR/MM/DD'));
Insert into MOVIE_DETAIL_IMAGE (IMAGE_ID,MOVIE_ID,FILENAME,FILETYPE,CREDATE) values (6,6,'89451_1000.jpg','detail_image',to_date('25/03/26','RR/MM/DD'));
Insert into MOVIE_DETAIL_IMAGE (IMAGE_ID,MOVIE_ID,FILENAME,FILETYPE,CREDATE) values (7,7,'86824_1000.jpg','detail_image',to_date('25/03/26','RR/MM/DD'));
Insert into MOVIE_DETAIL_IMAGE (IMAGE_ID,MOVIE_ID,FILENAME,FILETYPE,CREDATE) values (8,8,'89548_1000.jpg','detail_image',to_date('25/03/26','RR/MM/DD'));
Insert into MOVIE_DETAIL_IMAGE (IMAGE_ID,MOVIE_ID,FILENAME,FILETYPE,CREDATE) values (9,9,'9999.jpg','detail_image',to_date('25/03/26','RR/MM/DD'));

  CREATE UNIQUE INDEX "SYS_C007730" ON "MOVIE_DETAIL_IMAGE" ("IMAGE_ID");
  ALTER TABLE "MOVIE_DETAIL_IMAGE" ADD PRIMARY KEY ("IMAGE_ID") ENABLE;



CREATE TABLE "MOVIE_DETAILS" 
   (	"MOVIE_ID" NUMBER(20,0), 
	"MOVIE_TITLE" VARCHAR2(100 BYTE), 
	"MOVIE_GENRE" VARCHAR2(50 BYTE), 
	"MOVIE_TIME" VARCHAR2(50 BYTE), 
	"MOVIE_DIRECTOR" VARCHAR2(50 BYTE), 
	"MOVIE_ACTOR" VARCHAR2(50 BYTE), 
	"MOVIE_STORY" VARCHAR2(2000 BYTE), 
	"MOVIE_OPENDAY" VARCHAR2(50 BYTE), 
	"MOVIE_RANK" VARCHAR2(50 BYTE), 
	"MOVIE_PRODUCER" VARCHAR2(50 BYTE), 
	"MOVIE_STATUS" VARCHAR2(50 BYTE) DEFAULT 'y'
	--"MOVIE_KEYWORD" VARCHAR2(100 BYTE)
   );

Insert into MOVIE_DETAILS (MOVIE_ID,MOVIE_TITLE,MOVIE_GENRE,MOVIE_TIME,MOVIE_DIRECTOR,MOVIE_ACTOR,MOVIE_STORY,MOVIE_OPENDAY,MOVIE_RANK,MOVIE_PRODUCER,MOVIE_STATUS) values (1,'승부','드라마','118분','김형주','이병헌','세계 최고 바둑 대회에서 국내 최초 우승자가 된 조훈현.<br>
전 국민적 영웅으로 대접받던 그는 바둑 신동이라 불리는 이창호를 제자로 맞는다.<br>
“실전에선 기세가 8할이야” 제자와 한 지붕 아래에서 먹고 자며 가르친 지 수년. <br>
모두가 스승의 뻔한 승리를 예상했던 첫 사제 대결에서 조훈현은 전 국민이 지켜보는 가운데, 기세를 탄 제자에게 충격적으로 패한다. 오랜만에 패배를 맛본 조훈현과 이제 승부의 맛을 알게 된 이창호 조훈현은 타고난 승부사적 기질을 되살리며 다시 한번 올라갈 결심을 하게 되는데…<br>','2025/03/26','12세 이상 관람가','BH엔터테인먼트','y');
Insert into MOVIE_DETAILS (MOVIE_ID,MOVIE_TITLE,MOVIE_GENRE,MOVIE_TIME,MOVIE_DIRECTOR,MOVIE_ACTOR,MOVIE_STORY,MOVIE_OPENDAY,MOVIE_RANK,MOVIE_PRODUCER,MOVIE_STATUS) values (2,'로비','드라마/코미디','106분','하정우','하정우,김의성,이동휘','"더럽게 싸움을 걸면, 어떻게 더럽게 싸우죠?"<br>
연구밖에 모르는 스타트업 대표 창욱(하정우)은
라이벌 회사 대표 광우(박병은)의 뒷거래 때문에 기회도, 기술도 번번히 빼앗긴다.
그의 회사의 유일한 탈출구는 4조 원에 달하는 국책사업을 따내어, 한방에 자본을 확보하는 것!<br>
하지만 로비에 있어선 한수 위인 광우는 조장관(강말금)을 일찌감치 포섭한 상황,
창욱은 눈을 돌려 조장관의 최측근이자 실무를 쥐고 있는 남편 최실장(김의성)에게 접근해
더러운 싸움에 참전하게 되는데...<br>
마침내 뒷거래가 이뤄지는 골프장에
한날 한시 각자의 목적을 위해 모인 로비팀들,
이들의 진흙탕 로비가 펼쳐진다!<br>','2025/04/02','15세 이상 관람가','워크하우스컴퍼니','y');
Insert into MOVIE_DETAILS (MOVIE_ID,MOVIE_TITLE,MOVIE_GENRE,MOVIE_TIME,MOVIE_DIRECTOR,MOVIE_ACTOR,MOVIE_STORY,MOVIE_OPENDAY,MOVIE_RANK,MOVIE_PRODUCER,MOVIE_STATUS) values (3,'고독한 미식가 더 무비','드라마','110분','마츠시케 유타카','마츠시케 유타카','우리들의 밥친구이자 프로 혼밥러 고로 씨 인생 최대 위기 발발!<br>
<br>
옛 연인의 딸에게 연락을 받고 파리에 도착한 이노가시라 고로(마츠시게 유타카)는
어린 시절 먹었던 국물을 꼭 다시 맛보고 싶다는 노인의 황당한 부탁을 들어주기로 한다<br>
고로 씨는 잇짱지루라 불리는 그 국물의 정체를 찾아 외딴섬으로 향하던 중 폭풍을 만나
한국의 이름 모를 섬으로 떠밀려와 불법 입국 소동까지 겪는다
이토록 험난한 모험 속에서 우연히 만나게 된 여러 사람들의 도움을 받으며
점차 궁극의 국물에 도달하게 되는데......<br>
<br>
프랑스 파리에서 시작해 일본의 외딴섬, 한국 남풍도 및 거제도를 찍고, 다시 일본 도쿄로!
오로지 궁극의 국물을 위한 고로 씨의 맛있는 모험이 펼쳐진다!<br>
<br>','2025/03/19','전체 관람가','쿄도텔레비전','y');
Insert into MOVIE_DETAILS (MOVIE_ID,MOVIE_TITLE,MOVIE_GENRE,MOVIE_TIME,MOVIE_DIRECTOR,MOVIE_ACTOR,MOVIE_STORY,MOVIE_OPENDAY,MOVIE_RANK,MOVIE_PRODUCER,MOVIE_STATUS) values (4,'플로우','애니메이션','85분','긴츠 질발로디스','고양이, 골든리트리버, 뱀잡이수리','파도가 끝나는 곳,
고양이의 모험이 시작된다!<br>
인간이 살았던 흔적만이 남아있는 세상,<br>
홀로 집을 지키던 고양이는 갑작스러운 대홍수로
평화롭던 일상과 아늑했던 터전을 잃고 만다.<br>
때마침 다가온 낡은 배에 올라탄 고양이는
그 안에서 골든 리트리버, 카피바라,
여우원숭이, 뱀잡이수리를 만나고
서로의 차이점을 극복하고
팀을 이뤄 험난한 파도를 헤쳐나간다.','2025/03/19','전체 관람가','드림웰스튜디오','y');
Insert into MOVIE_DETAILS (MOVIE_ID,MOVIE_TITLE,MOVIE_GENRE,MOVIE_TIME,MOVIE_DIRECTOR,MOVIE_ACTOR,MOVIE_STORY,MOVIE_OPENDAY,MOVIE_RANK,MOVIE_PRODUCER,MOVIE_STATUS) values (5,'미키17','드라마,어드벤처','137분','봉준호','로버트패틴슨,스티븐 연','“당신은 몇 번째 미키입니까?”<br>
<br>
친구 ‘티모’와 함께 차린 마카롱 가게가 쫄딱 망해 거액의 빚을 지고
못 갚으면 죽이겠다는 사채업자를 피해 지구를 떠나야 하는 ‘미키’.
기술이 없는 그는, 정치인 ‘마셜’의 얼음행성 개척단에서
위험한 일을 도맡고, 죽으면 다시 프린트되는 익스펜더블로 지원한다.<br>
4년의 항해와 얼음행성 니플하임에 도착한 뒤에도 늘 ‘미키’를 지켜준 여자친구 ‘나샤’.
그와 함께, ‘미키’는 반복되는 죽음과 출력의 사이클에도 익숙해진다.
그러나 ‘미키 17’이 얼음행성의 생명체인 ‘크리퍼’와 만난 후 죽을 위기에서 돌아와 보니
이미 ‘미키 18’이 프린트되어 있다.
행성 당 1명만 허용된 익스펜더블이 둘이 된 ‘멀티플’ 상황
둘 중 하나는 죽어야 하는 현실 속에 걷잡을 수 없는 사건이 기다리고 있었으니…<br>
<br>
“자알 죽고, 내일 만나”<br>','2025/02/28','15세 이상 관람가','오프스크린','y');
Insert into MOVIE_DETAILS (MOVIE_ID,MOVIE_TITLE,MOVIE_GENRE,MOVIE_TIME,MOVIE_DIRECTOR,MOVIE_ACTOR,MOVIE_STORY,MOVIE_OPENDAY,MOVIE_RANK,MOVIE_PRODUCER,MOVIE_STATUS) values (6,'드라이브 인 타이페이','액션','100분','조지 황','루크 에반스','타이페이의 도심을 뒤흔드는 폭발적 카체이싱!
목숨을 건 브레이크 없는 추격전이 시작된다! <br>
최강의 마약단속국 블랙 요원, 존 롤러(루크 에반스).
익명의 정보원으로부터 극비 밀고를 받은 그는
대만 최대의 마약왕 Mr.강(성 강)을 잡기 위해 타이페이 한복판으로 잠입한다.<br>
 <br>
모든 것이 계획대로 진행되던 순간
그의 앞에 나타난 전설의 레이서, 조이(계륜미)
15년 전, 누구보다 뜨겁게 사랑했던 그녀
하지만 이젠 마약왕 강의 아내로 그 앞에 서 있다.<br>
거대한 조직이 그들을 쫓고,
도시 전체가 폭발할 듯한 총격전이 펼쳐진다!<br>
터질듯한 RPM!
브레이크는 필요 없다!
지금, 전속력으로 질주하라!<br>','2025/04/11','15세 이상 관람가','유로파코프','e');
Insert into MOVIE_DETAILS (MOVIE_ID,MOVIE_TITLE,MOVIE_GENRE,MOVIE_TIME,MOVIE_DIRECTOR,MOVIE_ACTOR,MOVIE_STORY,MOVIE_OPENDAY,MOVIE_RANK,MOVIE_PRODUCER,MOVIE_STATUS) values (7,'미션임파서블 파이널레코닝','액션','130분','크리스토퍼 맥쿼리','톰 크루즈','미션 임파서블 시리즈의 8번째 영화이자 마지막 영화. 전작인 《미션 임파서블: 데드 레코닝》에서 바로 이어지는 내용이다.<br>','2025/05/23','15세 이상 관람가','스카이댄스미디어','e');
Insert into MOVIE_DETAILS (MOVIE_ID,MOVIE_TITLE,MOVIE_GENRE,MOVIE_TIME,MOVIE_DIRECTOR,MOVIE_ACTOR,MOVIE_STORY,MOVIE_OPENDAY,MOVIE_RANK,MOVIE_PRODUCER,MOVIE_STATUS) values (8,'거룩한밤 데몬헌터스','액션','92분','임대희','마동석,서현,이다윗','악을 숭배하는 집단에 의해 혼란에 빠진 도시,
특별한 능력을 가진 어둠의 해결사 ‘거룩한 밤’ 팀
바우(마동석), 샤론(서현), 김군(이다윗)이
악의 무리를 처단하는 오컬트 액션<br>','2025/04/30','15세 이상 관람가','(주)빅펀치픽처스','e');
Insert into MOVIE_DETAILS (MOVIE_ID,MOVIE_TITLE,MOVIE_GENRE,MOVIE_TIME,MOVIE_DIRECTOR,MOVIE_ACTOR,MOVIE_STORY,MOVIE_OPENDAY,MOVIE_RANK,MOVIE_PRODUCER,MOVIE_STATUS) values (9,'너의 췌장을 먹고 싶어','드라마','192분','츠키카와 쇼','하마베 미나미, 키타쿠라 타쿠미','스스로를 외톨이로 만드는 나, 학교 최고의 인기인 그녀. <br>
<br>
어느 날, 우연히 주운 [공병문고]를 통해 나는 그녀와 비밀을 공유하게 되었다. 
너 한 사람밖에 없어. 나에게 평범한 나날을 선사해줄 사람<br>
네가 건넨 영원히 잊지 못할 고백.
그때 나는 그 말의 의미를 알지 못했다. <br>','2025/04/09','12세 이상 관람가','도호','e');

CREATE UNIQUE INDEX "SYS_C007701" ON "MOVIE_DETAILS" ("MOVIE_ID");
ALTER TABLE "MOVIE_DETAILS" ADD PRIMARY KEY ("MOVIE_ID") ENABLE;


CREATE TABLE "MOVIE_MEMBER" 
   (	"MEMBER_ID" VARCHAR2(20 BYTE) PRIMARY KEY, 
	"MEMBER_PW" VARCHAR2(20 BYTE) NOT NULL,
	"MEMBER_NAME" VARCHAR2(10 BYTE) NOT NULL, 
	"MEMBER_HP1" VARCHAR2(10) NOT NULL, 
	"MEMBER_HP2" VARCHAR2(10) NOT NULL, 
	"MEMBER_HP3" VARCHAR2(10) NOT NULL, 
	"JOINDATE" DATE DEFAULT sysdate
   );


Insert into MOVIE_MEMBER (MEMBER_ID,MEMBER_PW,MEMBER_NAME,MEMBER_HP1,MEMBER_HP2,MEMBER_HP3,JOINDATE) values ('admin','1234','관리자','010','111','111',to_date('25/04/01','RR/MM/DD'));
Insert into MOVIE_MEMBER (MEMBER_ID,MEMBER_PW,MEMBER_NAME,MEMBER_HP1,MEMBER_HP2,MEMBER_HP3,JOINDATE) values ('1234','1234','1234','010','1234','1234',to_date('25/04/01','RR/MM/DD'));

  CREATE UNIQUE INDEX "SYS_C007783" ON "MOVIE_MEMBER" ("MEMBER_ID");
  ALTER TABLE "MOVIE_MEMBER" ADD PRIMARY KEY ("MEMBER_ID") ENABLE;

CREATE TABLE "MOVIE_ORDER" 
   (	"MORDER_SEQ_NUM" NUMBER(20,0), 
	"MEMBER_ID" VARCHAR2(20 BYTE), 
	"MOVIE_ID" NUMBER(20,0), 
	"MOVIE_PRICE" NUMBER(20,0), 
	"MOVIE_TITLE" VARCHAR2(100 BYTE), 
	"MOVIE_PLACE" VARCHAR2(100 BYTE), 
	"MOVIE_SEAT_NUMBER" VARCHAR2(100 BYTE), 
	"MOVIE_PEOPLE_QTY" NUMBER(5,0), 
	--"MOVIE_FILENAME" VARCHAR2(60 BYTE), 
	"PAY_METHOD" VARCHAR2(200 BYTE), 
	"CARD_NAME" VARCHAR2(50 BYTE), 
	"CARD_PAY_MONTH" VARCHAR2(20 BYTE), 
	"ORDERD_AGE" VARCHAR2(100 BYTE), 
	"PAY_ORDERER_HP_NUM" VARCHAR2(20 BYTE), 
	"TICKET_NUMBER" NUMBER(30,0), 
	"PAY_ORDER_TIME" DATE DEFAULT sysdate, 
	"CARD_NUMBER" VARCHAR2(200 BYTE), 
	"MOVIE_SCREENING_DATE" VARCHAR2(200 BYTE), 
	"MOVIE_RUNNING_TIME" VARCHAR2(200 BYTE)
   );
    
CREATE SEQUENCE MORDER_SEQ
START WITH 1 -- 기존 최대값보다 1 증가한 값
INCREMENT BY 1
NOCACHE
NOCYCLE;

  CREATE UNIQUE INDEX "SYS_C007720" ON "MOVIE_ORDER" ("MORDER_SEQ_NUM");
  ALTER TABLE "MOVIE_ORDER" ADD PRIMARY KEY ("MORDER_SEQ_NUM") ENABLE;


CREATE TABLE "MOVIE_SEAT" 
   (	"MOVIE_PLACE" VARCHAR2(100 BYTE), 
	"MOVIE_SEAT_NUMBER" VARCHAR2(100 BYTE) 
   );

CREATE UNIQUE INDEX "SYS_C007711" ON "MOVIE_SEAT" ("MOVIE_SEAT_NUMBER");
ALTER TABLE "MOVIE_SEAT" ADD PRIMARY KEY ("MOVIE_SEAT_NUMBER") ENABLE;

CREATE TABLE "MOVIE_SEAT1" 
   (	"MOVIE_PLACE" VARCHAR2(100 BYTE), 
	"MOVIE_SEAT_NUMBER" VARCHAR2(100 BYTE)
   );

  CREATE UNIQUE INDEX "SYS_C007721" ON "MOVIE_SEAT1" ("MOVIE_SEAT_NUMBER");
  ALTER TABLE "MOVIE_SEAT1" ADD PRIMARY KEY ("MOVIE_SEAT_NUMBER") ENABLE;

CREATE TABLE "MOVIE_SEAT2" 
   (	"MOVIE_PLACE" VARCHAR2(100 BYTE), 
	"MOVIE_SEAT_NUMBER" VARCHAR2(100 BYTE)

   );
  CREATE UNIQUE INDEX "SYS_C007722" ON "MOVIE_SEAT2" ("MOVIE_SEAT_NUMBER");
  ALTER TABLE "MOVIE_SEAT2" ADD PRIMARY KEY ("MOVIE_SEAT_NUMBER") ENABLE;

CREATE TABLE "NOTICEBOARD" 
   (	"BOARDNO" NUMBER, 
	"BOARDTITLE" VARCHAR2(200 BYTE), 
	"BOARDCONTENT" VARCHAR2(4000 BYTE), 
	"BOARDWRITEDATE" DATE DEFAULT sysdate, 
	"MEMBER_ID" VARCHAR2(50 BYTE)
   );
   
Insert into NOTICEBOARD (BOARDNO,BOARDTITLE,BOARDCONTENT,BOARDWRITEDATE,MEMBER_ID) values (1,'공지테스트1','안녕하세요',to_date('25/03/25','RR/MM/DD'),'admin');

  CREATE UNIQUE INDEX "SYS_C007756" ON "NOTICEBOARD" ("BOARDNO");
  ALTER TABLE "NOTICEBOARD" ADD PRIMARY KEY ("BOARDNO") ENABLE;
  ALTER TABLE "NOTICEBOARD" MODIFY ("MEMBER_ID" NOT NULL ENABLE);
  ALTER TABLE "NOTICEBOARD" MODIFY ("BOARDCONTENT" NOT NULL ENABLE);
  ALTER TABLE "NOTICEBOARD" MODIFY ("BOARDTITLE" NOT NULL ENABLE);

CREATE TABLE "ONELINEREVIEW" 
   (	"ONELINEREVIEWNO" NUMBER, 
	"MOVIE_ID" NUMBER, 
	"ID" VARCHAR2(50 BYTE), 
    "PASSWORD" VARCHAR2 (100 BYTE),
	"CONTENT" VARCHAR2(100 BYTE),
    "PARENT_ONELINEREVIEWNO" NUMBER
   );
update ONELINEREVIEW set parent_onelinereviewno = onelinereviewno where parent_onelinereviewno is null;
   
  CREATE UNIQUE INDEX "SYS_C007848" ON "ONELINEREVIEW" ("ONELINEREVIEWNO");
  ALTER TABLE "ONELINEREVIEW" ADD PRIMARY KEY ("ONELINEREVIEWNO") ENABLE;

CREATE TABLE "REVIEW_DETAIL_IMAGE" 
   (	"IMAGE_ID" NUMBER(20,0), 
	"BOARDNO" NUMBER(20,0), 
	"FILENAME" VARCHAR2(50 BYTE), 
	"FILETYPE" VARCHAR2(40 BYTE), 
	"CREDATE" DATE DEFAULT SYSDATE, 
	"REG_ID" VARCHAR2(50 BYTE)
   );
   
CREATE TABLE "REVIEWBOARD" 
   (	"BOARDNO" NUMBER DEFAULT NULL, 
	"BOARDTITLE" VARCHAR2(200 BYTE), 
	"BOARDCONTENT" VARCHAR2(4000 BYTE), 
	"BOARDWRITEDATE" DATE DEFAULT sysdate, 
	"MEMBER_ID" VARCHAR2(50 BYTE), 
	"BOARDVIEW" NUMBER DEFAULT 0, 
	"BOARDPUSH" NUMBER DEFAULT 0, 
	"STARPOINT" NUMBER DEFAULT 0, 
	"MOVIE_ID" NUMBER
   );

  CREATE UNIQUE INDEX "SYS_C007764" ON "REVIEWBOARD" ("BOARDNO");
  ALTER TABLE "REVIEWBOARD" ADD PRIMARY KEY ("BOARDNO") ENABLE;
  ALTER TABLE "REVIEWBOARD" MODIFY ("MEMBER_ID" NOT NULL ENABLE);
  ALTER TABLE "REVIEWBOARD" MODIFY ("BOARDCONTENT" NOT NULL ENABLE);
  ALTER TABLE "REVIEWBOARD" MODIFY ("BOARDTITLE" NOT NULL ENABLE);
  

-- 이벤트 상세 이미지와 이벤트 게시판 연결
ALTER TABLE EVENT_DETAIL_IMAGE 
ADD CONSTRAINT FK_EVENT_DETAIL_IMAGE_BOARDNO 
FOREIGN KEY (BOARDNO) REFERENCES EVENTBOARD(BOARDNO) ON DELETE CASCADE;

-- 영화 상세 이미지와 영화 상세 정보 연결
ALTER TABLE MOVIE_DETAIL_IMAGE 
ADD CONSTRAINT FK_MOVIE_DETAIL_IMAGE_MOVIE_ID 
FOREIGN KEY (MOVIE_ID) REFERENCES MOVIE_DETAILS(MOVIE_ID) ON DELETE CASCADE;

-- 영화 주문과 회원 정보 연결
ALTER TABLE MOVIE_ORDER 
ADD CONSTRAINT FK_MOVIE_ORDER_MEMBER_ID 
FOREIGN KEY (MEMBER_ID) REFERENCES MOVIE_MEMBER(MEMBER_ID) ON DELETE SET NULL;

-- 영화 주문과 영화 정보 연결
ALTER TABLE MOVIE_ORDER 
ADD CONSTRAINT FK_MOVIE_ORDER_MOVIE_ID 
FOREIGN KEY (MOVIE_ID) REFERENCES MOVIE_DETAILS(MOVIE_ID) ON DELETE CASCADE;

-- 한줄 리뷰와 영화 정보 연결
ALTER TABLE ONELINEREVIEW 
ADD CONSTRAINT FK_ONELINEREVIEW_MOVIE_ID 
FOREIGN KEY (MOVIE_ID) REFERENCES MOVIE_DETAILS(MOVIE_ID) ON DELETE CASCADE;


-- 리뷰 상세 이미지와 리뷰 게시판 연결
ALTER TABLE REVIEW_DETAIL_IMAGE 
ADD CONSTRAINT FK_REVIEW_DETAIL_IMAGE_BOARDNO 
FOREIGN KEY (BOARDNO) REFERENCES REVIEWBOARD(BOARDNO) ON DELETE CASCADE;

-- 리뷰 상세 이미지와 회원 정보 연결
ALTER TABLE REVIEW_DETAIL_IMAGE 
ADD CONSTRAINT FK_REVIEW_IMAGE_MEMBER_ID 
FOREIGN KEY (REG_ID) REFERENCES MOVIE_MEMBER(MEMBER_ID) ON DELETE SET NULL;

-- 리뷰 게시판과 회원 정보 연결
ALTER TABLE REVIEWBOARD 
ADD CONSTRAINT FK_REVIEWBOARD_MEMBER_ID 
FOREIGN KEY (MEMBER_ID) REFERENCES MOVIE_MEMBER(MEMBER_ID) ON DELETE SET NULL;

-- 리뷰 게시판과 영화 정보 연결
ALTER TABLE REVIEWBOARD 
ADD CONSTRAINT FK_REVIEWBOARD_MOVIE_ID 
FOREIGN KEY (MOVIE_ID) REFERENCES MOVIE_DETAILS(MOVIE_ID) ON DELETE CASCADE;





-- 한줄 리뷰의 부모 리뷰 연결 (대댓글 구조)
ALTER TABLE ONELINEREVIEW 
ADD CONSTRAINT FK_ONELINEREVIEW_PARENT 
FOREIGN KEY (PARENT_ONELINEREVIEWNO) REFERENCES ONELINEREVIEW(ONELINEREVIEWNO) ON DELETE CASCADE;

ALTER TABLE MOVIE_SEAT 
ADD CONSTRAINT FK_MOVIE_SEAT_PLACE 
FOREIGN KEY (MOVIE_PLACE) 
REFERENCES MOVIE_ORDER(MOVIE_PLACE) ON DELETE CASCADE;

ALTER TABLE MOVIE_SEAT 
ADD CONSTRAINT FK_MOVIE_SEAT_NUMBER 
FOREIGN KEY (MOVIE_SEAT_NUMBER) 
REFERENCES MOVIE_ORDER(MOVIE_SEAT_NUMBER) ON DELETE CASCADE;

ALTER TABLE MOVIE_SEAT1 
ADD CONSTRAINT FK_MOVIE_SEAT1_PLACE 
FOREIGN KEY (MOVIE_PLACE) 
REFERENCES MOVIE_ORDER(MOVIE_PLACE) ON DELETE CASCADE;

ALTER TABLE MOVIE_SEAT1 
ADD CONSTRAINT FK_MOVIE_SEAT1_NUMBER 
FOREIGN KEY (MOVIE_SEAT_NUMBER) 
REFERENCES MOVIE_ORDER(MOVIE_SEAT_NUMBER) ON DELETE CASCADE;

ALTER TABLE MOVIE_SEAT2 
ADD CONSTRAINT FK_MOVIE_SEAT2_PLACE 
FOREIGN KEY (MOVIE_PLACE) 
REFERENCES MOVIE_ORDER(MOVIE_PLACE) ON DELETE CASCADE;

ALTER TABLE MOVIE_SEAT2 
ADD CONSTRAINT FK_MOVIE_SEAT2_NUMBER 
FOREIGN KEY (MOVIE_SEAT_NUMBER) 
REFERENCES MOVIE_ORDER(MOVIE_SEAT_NUMBER) ON DELETE CASCADE;


